library Utility_RenameNodes;

{

  This is a plugin generated by the PluginHelper
  application. It serves as a starting point for developing plugins
  for FMF Dialogue Tool.

  Plugin Name: Rename dialogue nodes to NodeXXX
  Author: Dj Unique

  Description:

  This plugin renames all dialogue nodes to the 'Node001', 'Node002', ... naming convention.

}

uses
  Classes,

  Controls,
  Dialogs,
  Forms,
  pluginfunc,
  SysUtils;

var
  dlg: pnewdialogue;

{$R *.res}

function GetPluginName: ShortString; stdcall;
begin;
  Result := 'Rename dialogue nodes to NodeXXX';
end;

function GetPluginDescription: ShortString; stdcall;
begin;
  Result := 'Node renaming tool';
end;

function GetInterfaceVersion: ShortString; stdcall;
begin;
  Result := interface_version;
end;

function CanAddToMenu: boolean; stdcall;
begin;
  Result := True;
end;

procedure PluginClose; stdcall;
begin;

end;

procedure RunPlugin(basepath: ShortString); stdcall;
var
curnode: ShortString;

var
  i: integer;

begin;
  // str := InputBox('Enter node prefix','Enter node prefix for each new node:','');
  new(dlg);
  dlg := GetDLGNew;
  //TStyleManager.TrySetStyle(GetStyle);

          for i := 0 to dlg.nodecount - 1 do
          begin;
            curnode := dlg.nodes[i].nodename;
            ExecuteScriptLines
              (pchar(format('SetNodeName(''%s'',''Node%0.3d'');',
              [curnode, i + 1])));
          end;
          ExecuteScriptLines(pchar('RefreshAll;'));
          ExecuteScriptLines(pchar('DialogueChangeNotify;'));
    dispose(dlg);



end;

exports
  GetPluginName,
  PluginClose,
  SetApplicationHandle,
  GetPluginDescription,
  GetInterfaceVersion,
  CanAddToMenu,
  RunPlugin;

begin

end.
